{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./datasource.ts","webpack:///./module.ts","webpack:///./queries/account.ts","webpack:///./queries/block.ts","webpack:///./query_ctrl.ts","webpack:///./response_parser.ts","webpack:///./rpc.ts","webpack:///external \"app/plugins/sdk\""],"names":[],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./module.ts\");\n","import { RPCClient } from './rpc';\nimport { queries } from './queries/account';\nimport { blockQueries } from './queries/block';\n\ninterface QueryResponse {\n  data: { datapoints: [(number | string)[]]; target: string }[];\n}\n\nexport class GenericDatasource {\n  type: string;\n  url: string;\n  name: string;\n  backendSrv: any;\n  rpc: RPCClient;\n\n  constructor(instanceSettings, backendSrv, private templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.jsonData.rpcURL;\n    this.name = instanceSettings.name;\n    this.backendSrv = backendSrv;\n    this.rpc = new RPCClient(this.url, this.backendSrv);\n  }\n\n  prepareQueryTarget(target, options) {\n    // Replace grafana variables\n    const interpolated = this.templateSrv.replace(\n      target,\n      options.scopedVars,\n      'pipe'\n    );\n    return interpolated;\n  }\n\n  query(options: any): Promise<QueryResponse> {\n    const q = options.targets.map(target => {\n      const queryType = target.queryType;\n      const subQueryType = target.subQueryType;\n      let returnedQuery: any = null;\n      switch (queryType) {\n        case 'account':\n          const query = queries.find(x => x.query_type == subQueryType);\n\n          if (query) {\n            returnedQuery = new query().query(\n              this.rpc,\n              this.prepareQueryTarget(target.address, options)\n            );\n          }\n\n        case 'block':\n          const blockQuery = blockQueries.find(\n            x => x.query_type == subQueryType\n          );\n\n          if (blockQuery) {\n            returnedQuery = new blockQuery().query(this.rpc) as any;\n          }\n      }\n\n      if (!returnedQuery) {\n        throw new Error('Unsupported query');\n      }\n\n      return returnedQuery.then(x => {\n        if (Array.isArray(x)) {\n          return x.map(y => {\n            return {\n              ...y,\n              target: target.target\n            };\n          });\n        }\n\n        return [\n          {\n            ...x,\n            target: target.target\n          }\n        ];\n      });\n    });\n\n    return Promise.all(q).then((results: any) => {\n      return { data: results.reduce((prev, x) => [...prev, ...x], []) };\n    });\n  }\n  testDatasource() {\n    return this.rpc.head().then(response => {\n      return {\n        status: 'success',\n        message: 'Data source is working',\n        title: 'Success'\n      };\n    });\n  }\n  annotationQuery() {}\n  metricFindQuery() {}\n}\n","import { GenericDatasource } from './datasource';\nimport { TezosQueryCtrl } from './query_ctrl';\n\nclass TezosAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n}\n\nclass TezosConfigCtrl {\n  static templateUrl = 'partials/config.html';\n  current: any;\n\n  /** @ngInject */\n  constructor($scope) {\n    this.current.jsonData = this.current.jsonData || {};\n  }\n}\n\nexport {\n  GenericDatasource as Datasource,\n  TezosQueryCtrl as QueryCtrl,\n  TezosConfigCtrl as ConfigCtrl,\n  TezosAnnotationsQueryCtrl as AnnotationsQueryCtrl\n};\n","import { RPCClient } from '../rpc';\nimport { parseNumber, parseString } from '../response_parser';\n\nclass AccountBalanceQuery {\n  static query_type = 'balance';\n  static display_name = 'Balance';\n\n  query(rpc: RPCClient, address: string) {\n    return rpc\n      .balance(address)\n      .then(x => Number(x) / 1000000)\n      .then(parseNumber);\n  }\n}\n\nclass AccountCounterQuery {\n  static query_type = 'counter';\n  static display_name = 'Counter';\n\n  query(rpc: RPCClient, address: string) {\n    return rpc\n      .contract(address)\n      .then(({ counter }) => counter)\n      .then(parseNumber);\n  }\n}\n\nclass AccountManagerQuery {\n  static query_type = 'manager';\n  static display_name = 'Manager';\n  query(rpc: RPCClient, address: string) {\n    return rpc\n      .contract(address)\n      .then(({ manager }) => manager)\n      .then(parseString);\n  }\n}\n\nexport const queries = [\n  AccountBalanceQuery,\n  AccountCounterQuery,\n  AccountManagerQuery\n];\n","import { RPCClient } from '../rpc';\nimport { parseNumber, parseString } from '../response_parser';\n\nclass BlockLevelQuery {\n  static query_type = 'level';\n  static display_name = 'Level';\n\n  query(rpc: RPCClient) {\n    return rpc\n      .head()\n      .then(({ header: { level } }) => {\n        return level;\n      })\n      .then(parseNumber);\n  }\n}\n\nclass BlockCycleQuery {\n  static query_type = 'current_cycle';\n  static display_name = 'Cycle';\n\n  query(rpc: RPCClient) {\n    return rpc\n      .head()\n      .then(({ metadata: { level: { cycle } } }) => {\n        return cycle;\n      })\n      .then(parseNumber);\n  }\n}\n\nclass BlockTimeCycleEndQuery {\n  static query_type = 'time_until_cycle_end';\n  static display_name = 'Time until cycle end';\n\n  query(rpc: RPCClient) {\n    return rpc.context().then(({ blocks_per_cycle }) => {\n      return rpc\n        .head()\n        .then(({ metadata: { level: { cycle_position } } }) => {\n          return (Number(blocks_per_cycle) - cycle_position) * 60 * 1000;\n        })\n        .then(parseNumber);\n    });\n  }\n}\n\nclass BlockVotingPeriodEndQuery {\n  static query_type = 'time_until_voting_end';\n  static display_name = 'Time until voting period end';\n\n  query(rpc: RPCClient) {\n    return rpc.context().then(({ blocks_per_voting_period }) => {\n      return rpc\n        .head()\n        .then(({ metadata: { level: { voting_period_position } } }) => {\n          return (\n            (Number(blocks_per_voting_period) - voting_period_position) *\n            60 *\n            1000\n          );\n        })\n        .then(parseNumber);\n    });\n  }\n}\n\nclass BlockTimestampQuery {\n  static query_type = 'timestamp';\n  static display_name = 'Time since last block';\n\n  query(rpc: RPCClient) {\n    return rpc\n      .head()\n      .then(({ header: { timestamp } }) => {\n        const ts: any = new Date(timestamp);\n        return Math.abs((new Date() as any) - ts);\n      })\n      .then(parseNumber);\n  }\n}\n\nclass BlockVotingPeriodKindQuery {\n  static query_type = 'voting_period_kind';\n  static display_name = 'Voting Period Kind';\n\n  query(rpc: RPCClient) {\n    return rpc\n      .head()\n      .then(({ metadata: { voting_period_kind } }) => {\n        return voting_period_kind.replace('testing_vote', 'exploration_vote');\n      })\n      .then(parseString);\n  }\n}\n\nclass BlockLatestBakerQuery {\n  static query_type = 'latest_baker';\n  static display_name = 'Latest Baker';\n\n  query(rpc: RPCClient) {\n    return rpc\n      .head()\n      .then(({ metadata: { baker } }) => {\n        return baker;\n      })\n      .then(parseString);\n  }\n}\n\nclass BlockVotingPeriodQuery {\n  static query_type = 'voting_period';\n  static display_name = 'Voting Period';\n\n  query(rpc: RPCClient) {\n    return rpc\n      .head()\n      .then(({ metadata: { level: { voting_period } } }) => {\n        return voting_period;\n      })\n      .then(parseNumber);\n  }\n}\n\nclass BlockBakingRightQuery {\n  static query_type = 'baking_rights';\n  static display_name = 'Baking rights';\n\n  query(rpc: RPCClient) {\n    return rpc.backingRight().then(rights => {\n      return rights.map(x => {\n        return { datapoints: [[x.delegate, Date.now()]] };\n      });\n    });\n  }\n}\n\nclass BlockNumberOfOpsQuery {\n  static query_type = 'number_of_ops';\n  static display_name = 'Number of operations';\n\n  query(rpc: RPCClient) {\n    return rpc\n      .head()\n      .then(({ operations }) => {\n        return (operations || []).reduce((prevSum, op) => {\n          return (\n            prevSum +\n            op.reduce((prev, subOp) => {\n              return prev + subOp.contents.length;\n            }, 0)\n          );\n        }, 0);\n      })\n      .then(parseNumber);\n  }\n}\n\nclass BlockVolumeQuery {\n  static query_type = 'volume';\n  static display_name = 'Volume';\n\n  query(rpc: RPCClient) {\n    return rpc\n      .head()\n      .then(({ operations }) => {\n        return (operations || []).reduce((prevSum, op) => {\n          return (\n            prevSum +\n            op.reduce((prev, subOp: any) => {\n              return (\n                prev +\n                subOp.contents\n                  .filter(x => x.kind === 'transaction')\n                  .reduce(\n                    (prevAmount, x) => prevAmount + Number(x.amount) / 1000000,\n                    0\n                  )\n              );\n            }, 0)\n          );\n        }, 0);\n      })\n      .then(parseNumber);\n  }\n}\n\nexport const blockQueries = [\n  BlockLevelQuery,\n  BlockCycleQuery,\n  BlockTimestampQuery,\n  BlockVotingPeriodQuery,\n  BlockTimeCycleEndQuery,\n  BlockVotingPeriodKindQuery,\n  BlockLatestBakerQuery,\n  BlockNumberOfOpsQuery,\n  BlockVolumeQuery,\n  BlockVotingPeriodEndQuery,\n  BlockBakingRightQuery\n];\n","import { QueryCtrl } from 'grafana/app/plugins/sdk';\nimport { queries } from './queries/account';\nimport { blockQueries } from './queries/block';\n\nexport class TezosQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  accountSubQueryTypes = queries.map(({ display_name, query_type }) => ({\n    value: query_type,\n    text: display_name\n  }));\n\n  blockSubQueryTypes = blockQueries.map(({ display_name, query_type }) => ({\n    value: query_type,\n    text: display_name\n  }));\n\n  queryTypes = [\n    { value: 'block', text: 'Block', defaults: blockQueries },\n    { value: 'account', text: 'Account', defaults: queries }\n  ];\n\n  /** @ngInject **/\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    this.onSave();\n  }\n\n  onSave() {\n    if (!this.target.queryType) {\n      this.target.queryType = 'block';\n    }\n\n    if (!this.target.subQueryType) {\n      this.target.subQueryType = this.queryTypes.find(\n        x => x.value === this.target.queryType\n      )!.defaults[0].query_type;\n    }\n    this.panelCtrl.refresh();\n  }\n\n  get subQueryTypes() {\n    switch (this.target.queryType) {\n      case 'account':\n        return this.accountSubQueryTypes;\n      default:\n        return this.blockSubQueryTypes;\n    }\n  }\n\n  get showAccount() {\n    return this.target && this.target.queryType === 'account';\n  }\n}\n","export function parseNumber(data: string | number): { datapoints: [number[]] } {\n  return { datapoints: [[Number(data), Date.now()]] };\n}\n\nexport function parseString(data: string): { datapoints: [[string, number]] } {\n  return { datapoints: [[data, Date.now()]] };\n}\n","import { Contract, Balance, Block, Context } from './model';\n\nexport class RPCClient {\n  private rpcHeadEndpoint = '/chains/main/blocks/head';\n  private rpcBalanceEndpoint =\n    '/chains/main/blocks/head/context/contracts/%s/balance';\n  private rpcContractEndpoint = '/chains/main/blocks/head/context/contracts/%s';\n  private rpcContextEndpoint = '/chains/main/blocks/head/context/constants';\n  private rpcBakingRightsEndpoint =\n    '/chains/main/blocks/head/helpers/baking_rights';\n\n  private cache = new Map<string, { result: Promise<any>; timestamp: any }>();\n\n  constructor(private baseUrl: string, private backend) {}\n\n  contract(pkh: string): Promise<Contract> {\n    return this.doRequest({\n      url: this.baseUrl + this.rpcContractEndpoint.replace('%s', pkh),\n      method: 'GET'\n    }).then(({ data }) => {\n      return data as Contract;\n    });\n  }\n\n  balance(pkh: string): Promise<Balance> {\n    return this.doRequest({\n      url: this.baseUrl + this.rpcBalanceEndpoint.replace('%s', pkh),\n      method: 'GET'\n    }).then(({ data }) => {\n      return data as string;\n    });\n  }\n\n  head(): Promise<Block> {\n    return this.doRequest({\n      url: this.baseUrl + this.rpcHeadEndpoint,\n      method: 'GET'\n    }).then(({ data }) => {\n      return data as Block;\n    });\n  }\n\n  backingRight(): Promise<any> {\n    return this.doRequest({\n      url: this.baseUrl + this.rpcBakingRightsEndpoint,\n      method: 'GET'\n    }).then(({ data }) => {\n      return data as Block;\n    });\n  }\n\n  context(): Promise<Context> {\n    return this.doRequest({\n      url: this.baseUrl + this.rpcContextEndpoint,\n      method: 'GET'\n    }).then(({ data }) => {\n      return data as Context;\n    });\n  }\n\n  private hasOption(options) {\n    const lastOption = this.cache.get(options);\n    const now: any = new Date();\n    return (\n      lastOption && lastOption.timestamp && now - lastOption.timestamp < 5000 // Cache for 5 seconds\n    );\n  }\n\n  private doRequest(options): Promise<{ data: any; status: number }> {\n    if (!this.hasOption(options.url)) {\n      this.cache.set(options.url, {\n        result: this.backend.datasourceRequest(options),\n        timestamp: new Date()\n      });\n    }\n\n    return this.cache.get(options.url)!.result;\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_plugins_sdk__;"],"sourceRoot":""}